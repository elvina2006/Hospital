# Generated by Django 5.1.4 on 2025-01-06 09:56

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Wards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('name_en', models.CharField(max_length=20, null=True, unique=True)),
                ('name_tr', models.CharField(max_length=20, null=True, unique=True)),
                ('ward_type', models.CharField(max_length=8)),
                ('ward_type_en', models.CharField(max_length=8, null=True)),
                ('ward_type_tr', models.CharField(max_length=8, null=True)),
                ('capacity', models.CharField(max_length=6)),
                ('capacity_en', models.CharField(max_length=6, null=True)),
                ('capacity_tr', models.CharField(max_length=6, null=True)),
                ('current_occupancy', models.CharField(max_length=3)),
                ('current_occupancy_en', models.CharField(max_length=3, null=True)),
                ('current_occupancy_tr', models.CharField(max_length=3, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('first_name_en', models.CharField(blank=True, max_length=150, null=True, verbose_name='first name')),
                ('first_name_tr', models.CharField(blank=True, max_length=150, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('last_name_en', models.CharField(blank=True, max_length=150, null=True, verbose_name='last name')),
                ('last_name_tr', models.CharField(blank=True, max_length=150, null=True, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='KG')),
                ('profile_picture', models.ImageField(upload_to='picture/')),
                ('role', models.CharField(choices=[('администратор', 'администратор'), ('врач', 'врач'), ('пациент', 'пациент')], default='пациент', max_length=50)),
                ('address', models.TextField()),
                ('date_of_birth', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='profile_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='profile_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Doctors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_name', models.CharField(max_length=222)),
                ('shift_start', models.TimeField(blank=True, null=True)),
                ('shift_end', models.TimeField(blank=True, null=True)),
                ('qualifications', models.CharField(max_length=15)),
                ('qualifications_en', models.CharField(max_length=15, null=True)),
                ('qualifications_tr', models.CharField(max_length=15, null=True)),
                ('experience_years', models.CharField(max_length=5)),
                ('experience_years_en', models.CharField(max_length=5, null=True)),
                ('experience_years_tr', models.CharField(max_length=5, null=True)),
                ('working_days', multiselectfield.db.fields.MultiSelectField(choices=[('monday', 'monday'), ('tuesday', 'tuesday'), ('wednesday', 'wednesday'), ('thursday', 'thursday'), ('friday', 'friday'), ('saturday', 'saturday'), ('sunday', 'sunday')], max_length=32)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL)),
                ('user_en', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL)),
                ('user_tr', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Direction_and_Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('name_en', models.CharField(max_length=250, null=True)),
                ('name_tr', models.CharField(max_length=250, null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='pictures/')),
                ('picture_en', models.ImageField(blank=True, null=True, upload_to='pictures/')),
                ('picture_tr', models.ImageField(blank=True, null=True, upload_to='pictures/')),
                ('description', models.TextField(blank=True, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_tr', models.TextField(blank=True, null=True)),
                ('doctor', models.ManyToManyField(to='clinic.doctors')),
                ('doctor_en', models.ManyToManyField(null=True, to='clinic.doctors')),
                ('doctor_tr', models.ManyToManyField(null=True, to='clinic.doctors')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('name_en', models.CharField(max_length=20, null=True)),
                ('name_tr', models.CharField(max_length=20, null=True)),
                ('location', models.CharField(max_length=32, unique=True)),
                ('location_en', models.CharField(max_length=32, null=True, unique=True)),
                ('location_tr', models.CharField(max_length=32, null=True, unique=True)),
                ('dead_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dead_id', to='clinic.doctors')),
                ('dead_id_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dead_id', to='clinic.doctors')),
                ('dead_id_tr', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dead_id', to='clinic.doctors')),
            ],
        ),
        migrations.CreateModel(
            name='Appointments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('date_time_en', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_time_tr', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(max_length=15)),
                ('status_en', models.CharField(max_length=15, null=True)),
                ('status_tr', models.CharField(max_length=15, null=True)),
                ('notes', models.TextField()),
                ('notes_en', models.TextField(null=True)),
                ('notes_tr', models.TextField(null=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_id', to='clinic.doctors')),
                ('staff_id_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='staff_id', to='clinic.doctors')),
                ('staff_id_tr', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='staff_id', to='clinic.doctors')),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hospital_name', models.CharField(max_length=32, unique=True)),
                ('hospital_name_en', models.CharField(max_length=32, null=True, unique=True)),
                ('hospital_name_tr', models.CharField(max_length=32, null=True, unique=True)),
                ('hospital_image', models.ImageField(upload_to='hospital_image/')),
                ('hospital_image_en', models.ImageField(null=True, upload_to='hospital_image/')),
                ('hospital_image_tr', models.ImageField(null=True, upload_to='hospital_image/')),
                ('address', models.CharField(max_length=32)),
                ('address_en', models.CharField(max_length=32, null=True)),
                ('address_tr', models.CharField(max_length=32, null=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_tr', models.TextField(null=True)),
                ('operating_mode', models.CharField(max_length=300)),
                ('chief_physician', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='clinic.doctors', verbose_name='Главный врач')),
            ],
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='KG')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.hospital')),
            ],
        ),
        migrations.CreateModel(
            name='Name_and_Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_tr', models.TextField(null=True)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_name', to='clinic.direction_and_services')),
                ('name_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_name', to='clinic.direction_and_services')),
                ('name_tr', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_name', to='clinic.direction_and_services')),
            ],
        ),
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emergency_contact', models.CharField(blank=True, max_length=20, null=True)),
                ('blood_type', models.CharField(blank=True, max_length=5, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('allergies_en', models.TextField(blank=True, null=True)),
                ('allergies_tr', models.TextField(blank=True, null=True)),
                ('medical_history', models.TextField(blank=True, null=True)),
                ('medical_history_en', models.TextField(blank=True, null=True)),
                ('medical_history_tr', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patientProfile', to=settings.AUTH_USER_MODEL)),
                ('user_en', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patientProfile', to=settings.AUTH_USER_MODEL)),
                ('user_tr', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patientProfile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis', models.CharField(max_length=45)),
                ('diagnosis_en', models.CharField(max_length=45, null=True)),
                ('diagnosis_tr', models.CharField(max_length=45, null=True)),
                ('treatment', models.CharField(max_length=40)),
                ('treatment_en', models.CharField(max_length=40, null=True)),
                ('treatment_tr', models.CharField(max_length=40, null=True)),
                ('prescribed_medication', models.TextField()),
                ('prescribed_medication_en', models.TextField(null=True)),
                ('prescribed_medication_tr', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_at_en', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_at_tr', models.DateTimeField(auto_now_add=True, null=True)),
                ('appointments', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Appointments', to='clinic.appointments')),
                ('appointments_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Appointments', to='clinic.appointments')),
                ('appointments_tr', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Appointments', to='clinic.appointments')),
                ('doctor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_id', to='clinic.doctors')),
                ('doctor_id_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_id', to='clinic.doctors')),
                ('doctor_id_tr', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_id', to='clinic.doctors')),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medicalrecord', to='clinic.patientprofile')),
                ('patient_id_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='medicalrecord', to='clinic.patientprofile')),
                ('patient_id_tr', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='medicalrecord', to='clinic.patientprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Feedbacks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('content_en', models.TextField(null=True)),
                ('content_tr', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('doctor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='clinic.doctors')),
                ('doctor_id_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='clinic.doctors')),
                ('doctor_id_tr', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='clinic.doctors')),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient', to='clinic.patientprofile')),
                ('patient_id_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient', to='clinic.patientprofile')),
                ('patient_id_tr', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient', to='clinic.patientprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Billing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.PositiveIntegerField(blank=True, null=True)),
                ('total_amount_en', models.PositiveIntegerField(blank=True, null=True)),
                ('total_amount_tr', models.PositiveIntegerField(blank=True, null=True)),
                ('paid', models.BooleanField(default=False)),
                ('paid_en', models.BooleanField(default=False)),
                ('paid_tr', models.BooleanField(default=False)),
                ('issued_date', models.DateField(auto_now_add=True)),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='billing', to='clinic.patientprofile')),
                ('patient_id_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='billing', to='clinic.patientprofile')),
                ('patient_id_tr', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='billing', to='clinic.patientprofile')),
            ],
        ),
        migrations.AddField(
            model_name='appointments',
            name='patient_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_id', to='clinic.patientprofile'),
        ),
        migrations.AddField(
            model_name='appointments',
            name='patient_id_en',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_id', to='clinic.patientprofile'),
        ),
        migrations.AddField(
            model_name='appointments',
            name='patient_id_tr',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_id', to='clinic.patientprofile'),
        ),
        migrations.CreateModel(
            name='Prescriptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication', models.CharField(max_length=15)),
                ('medication_en', models.CharField(max_length=15, null=True)),
                ('medication_tr', models.CharField(max_length=15, null=True)),
                ('dosage', models.CharField(max_length=10)),
                ('dosage_en', models.CharField(max_length=10, null=True)),
                ('dosage_tr', models.CharField(max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='clinic.medicalrecord')),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='clinic.patientprofile')),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor', to='clinic.doctors')),
                ('staff_id_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor', to='clinic.doctors')),
                ('staff_id_tr', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor', to='clinic.doctors')),
            ],
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speciality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='speciality', to='clinic.doctors')),
                ('speciality_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='speciality', to='clinic.doctors')),
                ('speciality_tr', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='speciality', to='clinic.doctors')),
            ],
        ),
    ]
